{
  "kind": "collectionType",
  "collectionName": "articles",
  "info": {
    "singularName": "article",
    "pluralName": "articles",
    "displayName": "Article",
    "description": ""
  },
  "options": {
    "draftAndPublish": true
  },
  "pluginOptions": {
    "import-export-entries": {
      "idField": "article_id"
    }
  },
  "attributes": {
    "article_id": {
      "type": "uid"
    },
    "title": {
      "type": "string"
    },
    "published_date": {
      "type": "date"
    },
    "primary_companies": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::company.company",
      "inversedBy": "articles"
    },
    "secondary_companies": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::company.company",
      "inversedBy": "secondary_articles"
    },
    "tags": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::tag.tag",
      "mappedBy": "articles"
    },
    "industry": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::industry.industry",
      "inversedBy": "articles"
    },
    "brief": {
      "type": "component",
      "repeatable": true,
      "component": "brief.briefs"
    },
    "table_with_content": {
      "type": "component",
      "repeatable": true,
      "component": "table-of-content.index"
    },
    "sub_industries": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::sub-industry.sub-industry",
      "inversedBy": "articles"
    },
    "bookmarks": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::bookmark.bookmark",
      "mappedBy": "article"
    },
    "expert_type": {
      "type": "enumeration",
      "enum": [
        "Competitor",
        "Customer",
        "Industry Expert",
        "Former",
        "Partner"
      ],
      "default": "Industry Expert",
      "required": true
    },
    "est_read": {
      "type": "integer",
      "required": true
    },
    "read_details": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::read-article.read-article",
      "mappedBy": "article"
    },
    "like_details": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::liked-article.liked-article",
      "mappedBy": "article"
    },
    "disliked_articles": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::disliked-article.disliked-article",
      "mappedBy": "article"
    }
  }
}
